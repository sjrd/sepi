Ce fichier décrit la grammaire du langage Delphi.

#####

tkEof	Fin de fichier
tkBlank Blanc
tkComment   Commentaire
tkIdentifier	Identificateur
tkInteger	Nombre entier
tkFloat	Nombre en virgule flottante
tkStringCst	Chaine

tkOpenBracket	(
tkCloseBracket	)
tkOpenSqBracket	[
tkCloseSqBracket	]
tkEquals	=
tkComma	,
tkColon	:
tkSemiColon	;
tkDot	.
tkRange	..
tkHat	^
tkAt	@
tkAssign	:=

tkUnit	unit
tkUses	uses
tkType	type
tkConst	const
tkResourceString	resourcestring
tkVar	var
tkOut	out

tkArray	array
tkSet	set
tkOf	of
tkObject	object
tkPacked	packed
tkRecord	record
tkCase	case
tkInterface	interface
tkDispInterface	dispinterface
tkClass	class
tkPrivate	private
tkProtected	protected
tkPublic	public
tkPublished	published
tkStrict	strict
tkBegin	begin
tkEnd	end
tkNil	nil

tkProcedure	procedure
tkFunction	function
tkProperty	property
tkConstructor	constructor
tkDestructor	destructor

tkPlus	+
tkMinus	-
tkTimes	*
tkDivide	/
tkDiv	div
tkMod	mod
tkShl	shl
tkShr	shr
tkOr	or
tkAnd	and
tkXor	xor
tkNot	not
tkLowerThan	<
tkLowerEq	<=
tkGreaterThan	>
tkGreaterEq	>=
tkNotEqual	<>
tkIn	in
tkIs	is
tkAs	as

tkRegister	register
tkCDecl	cdecl
tkPascal	pascal
tkStdCall	stdcall
tkSafeCall	safecall
tkAssembler	assembler

tkName	name
tkIndex	index
tkRead	read
tkWrite	write
tkDefault	default
tkNoDefault	nodefault
tkStored	stored
tkDispID	dispid
tkReadOnly	readonly
tkWriteOnly	writeonly
tkString	string

tkDeprecated	deprecated
tkPlatform	platform

tkOverload	overload
tkVirtual	virtual
tkDynamic	dynamic
tkMessage	message
tkOverride	override
tkAbstract	abstract
tkStatic	static
tkReintroduce	reintroduce
tkInline	inline

tkImplementation	implementation
tkForward	forward
tkInitialization	initialization
tkFinalization	finalization

tkIf	if
tkThen	then
tkElse	else
tkWhile	while
tkDo	do
tkRepeat	repeat
tkUntil	until
tkFor	for
tkTo	to
tkDownTo	downto
tkTry	try
tkExcept	except
tkOn	on
tkFinally	finally
tkRaise	raise
tkInherited	inherited
tkWith	with

tkPreProcessor  Directive de compilation

#####

Source
	'unit'* Identifier ';'* Interface (Implementation 'end'* '.'*)? tkEof*

InPreProcessorExpression
	ConstExpression tkEof*

Interface
	'interface'* UsesSection (IntfSection)*

Implementation
	'implementation'* (ImplSection)* InitFinit

IntfSection	Simplify
	TypeSection
	ConstSection
	VarSection
	RoutineDecl

ImplSection	Simplify
	TypeSection
	ConstSection
	VarSection
	MethodImpl

InitFinit	Simplify
	UnitInitialization (UnitFinalization)?
	@

Identifier
	tkIdentifier
	'register'
	'cdecl'
	'pascal'
	'stdcall'
	'safecall'
	'assembler'
	'name'
	'index'
	'read'
	'write'
	'default'
	'nodefault'
	'stored'
	'dispid'
	'readonly'
	'writeonly'
	'string'
	'deprecated'
	'platform'
	'overload'
	'virtual'
	'dynamic'
	'message'
	'override'
	'abstract'
	'static'
	'reintroduce'
	'inline'

UsesSection
	'uses'* CommaIdentList ';'*
	@

CommaIdentList	Simplify
	Identifier (','* Identifier)*

CommaIdentDeclList
	IdentifierDecl (','* IdentifierDecl)*

QualifiedIdent	AsText
	Identifier ('.'* Identifier)*

IdentifierDecl	AsText
	Identifier

InitializationExpression
	0 ArrayInitializationExpression
	1 RecordInitializationExpression
	2 GUIDInitializationExpression
	3 OtherInitializationExpression

ArrayInitializationExpression
	ArrayInitialization

ArrayInitialization
	'('* InitializationExpression (','* InitializationExpression)* ')'*

RecordInitializationExpression
	RecordInitialization

RecordInitialization
	'('* Identifier ':'* InitializationExpression RecordInitEx ')'*

RecordInitEx	Simplify
	';'* (Identifier ':'* InitializationExpression RecordInitEx)?
	@

GUIDInitializationExpression
	GUIDInitialization

GUIDInitialization
	1 RecordInitialization
	ConstExpression

OtherInitializationExpression
	OtherInitialization

OtherInitialization
	ConstExpression

Expression
	SingleExpr (BinaryOp SingleExpr)*

ExpressionNoEquals
	SingleExpr (BinaryOpNoEquals SingleExpr)*

ConstExpression
	Expression

ConstExpressionNoEquals
	ExpressionNoEquals

ConstOrType
	Expression

ConstOrTypeNoEquals
	ExpressionNoEquals

SingleExpr
	ParenthesizedExpr (NextExpr)*
	SingleValue (NextExpr)*
	UnaryOpExpr

UnaryOpExpr
	UnaryOp SingleExpr
	AddressOfOp SingleExpr

ParenthesizedExpr
	'('* Expression ')'*

NextExpr	Simplify
	UnaryOpModifier
	Parameters
	ArrayIndices
	FieldSelection

UnaryOpModifier
	DereferenceOp

DereferenceOp
	'^'

Parameters
	'('* InnerParameters ')'*

InnerParameters	Simplify
	Parameter (','* Parameter)*
	@

Parameter	Simplify
	Expression
	1 '['* SetOrOpenArrayBuilder ']'*

SetOrOpenArrayBuilder
	SetOrOpenArrayRange (','* SetOrOpenArrayRange)*
	@

SetOrOpenArrayRange
	Expression ('..'* Expression)?

IdentTestParam
	'('* Identifier ')'*

ArrayIndices
	'['* ExprList ']'*

ExprList	Simplify
	Expression (','* Expression)*

FieldSelection
	'.'* Identifier

SingleValue
	IntegerConst
	FloatConst
	StringConst
	IdentifierSingleValue
	'inherited'* InheritedSingleValue
	NilValue
	'['* SetValue ']'*

IntegerConst
	tkInteger

FloatConst
	tkFloat

StringConst
	tkStringCst

IdentifierSingleValue
	Identifier

InheritedSingleValue	Simplify
	1 InheritedExpression
	0 PureInheritedExpression

InheritedExpression
	Identifier

PureInheritedExpression
	@

NilValue
	'nil'

SetValue
	SetRange (','* SetRange)*
	@

CaseOfSetValue
	SetRange (','* SetRange)*

SetRange
	Expression ('..'* Expression)?

BinaryOp	Simplify
	ArithmeticLogicOp
	InOperation
	IsOperation
	AsOperation

BinaryOpNoEquals	Simplify
	ArithmeticLogicOpNoEquals
	InOperation
	IsOperation
	AsOperation

ArithmeticLogicOp
	'+'
	'-'
	'*'
	'/'
	'div'
	'mod'
	'shl'
	'shr'
	'or'
	'and'
	'xor'
	'='
	'<'
	'<='
	'>'
	'>='
	'<>'

ArithmeticLogicOpNoEquals
	'+'
	'-'
	'*'
	'/'
	'div'
	'mod'
	'shl'
	'shr'
	'or'
	'and'
	'xor'
	'<'
	'<='
	'>'
	'>='
	'<>'

InOperation
	'in'

IsOperation
	'is'

AsOperation
	'as'

UnaryOp
	'+'
	'-'
	'not'

AddressOfOp
	'@'

ConstSection
	ConstKeyWord* (ConstDecl)+

ConstKeyWord
	'const'
	'resourcestring'

ConstDecl
	IdentifierDecl InnerConstDecl TypeModifiers ';'*

InnerConstDecl	Simplify
	':'* TypeDesc '='* InitializationExpression
	'='* ConstExpression

VarSection
	'var'* (GlobalVar)+

GlobalVar
	IdentifierDecl InnerGlobalVar TypeModifiers ';'*

InnerGlobalVar	Simplify
	':'* TypeDesc ('='* InitializationExpression)?
	(','* IdentifierDecl)+ ':'* TypeDesc

TypeSection
	'type'* (TypeDecl)+

TypeDecl
	Attributes* IdentifierDecl '='* TypeDesc TypeModifiers ';'*

Attributes
	(Attribute)*

Attribute
	'['* QualifiedIdent ('('* AttributeParams ')'*)? ']'*

AttributeParams
	ConstExpression (','* ConstExpression)*

TypeDesc	Simplify
	CloneDesc
	RangeOrEnumDesc
	SetDesc
	1 StringDesc
	PointerDesc
	ArrayDesc
	RecordDesc
	'packed'* PackedDesc
	ClassDesc
	InterfaceDesc
	DispInterfaceDesc
	EventDesc

TypeName
	QualifiedIdent

PackedDesc	Simplify
	PackedArrayDesc
	PackedRecordDesc

ArrayDesc
	'array'* ArrayDims 'of'* TypeDesc

PackedArrayDesc
	'array'* ArrayDims 'of'* TypeDesc

ArrayDims
	'['* ArrayRange (','* ArrayRange)* ']'*
	@

ArrayRange
	ConstOrType ('..'* ConstExpression)?

TypeModifiers
	(TypeModifier)*

TypeModifier	Simplify
	1 'deprecated' (tkStringCst*)?
	Identifier

CloneDesc
	'type'* TypeName (AnsiStringCodePage)?

AnsiStringCodePage	Simplify
	'('* ConstExpression ')'*

RangeOrEnumDesc	SuccessiveTries
	EnumDesc
	FakeEnumDesc
	RangeDesc

RangeDesc
	ConstOrTypeNoEquals ('..'* ConstExpressionNoEquals)?

EnumDesc
	'('* CommaIdentList ')'*

FakeEnumDesc
	'('* FakeEnumValue (','* FakeEnumValue)* ')'*

FakeEnumValue
	Identifier ('='* ConstExpression)?

SetDesc
	'set'* 'of'* TypeDesc

StringDesc
	'string' ('['* ConstExpression ']'*)?

PointerDesc
	'^'* QualifiedIdent

RecordDesc
	'record'* RecordContents 'end'*

PackedRecordDesc
	'record'* RecordContents 'end'*

RecordContents
	(RecordField)* RecordCaseBlock

RecordCaseBlock
	'case'* Identifier* (':'* Identifier*)? 'of'* (RecordCase)*
	@

RecordCase	Simplify
	CaseLabels* ':'* '('* RecordCaseContents ')'* (';'*)?

CaseLabels	AsText
	ConstExpression (',' ConstExpression)*

RecordCaseContents
	NextRecordCaseContentsEx

NextRecordCaseContents	Simplify
	';'* NextRecordCaseContentsEx
	RecordCaseBlock

NextRecordCaseContentsEx	Simplify
	RecordCaseField NextRecordCaseContents
	RecordCaseBlock

RecordField
	CommaIdentDeclList ':'* TypeDesc TypeModifiers ';'*

RecordCaseField
	CommaIdentDeclList ':'* TypeDesc TypeModifiers

Field
	CommaIdentDeclList ':'* TypeDesc TypeModifiers ';'*

ClassDesc
	'class'* ClassExDesc

ClassExDesc	Simplify
	ClassHeritage ClassContents
	1 'of' QualifiedIdent

ClassContents	Simplify
	1 ClassMemberLists 'end'*
	@

ClassHeritage
	'('* QualifiedIdent (','* QualifiedIdent)* ')'*
	@

ClassMemberLists
	ClassMemberList (Visibility ClassMemberList)*

Visibility
	'private'
	'protected'
	'public'
	'published'
	'strict' StrictVisibility

StrictVisibility	Simplify
	'private'
	'protected'

ClassMemberList	Simplify
	(Field)* (ClassMethodProp)*

InterfaceDesc
	'interface'* (InterfaceHeritage InterfaceGUID InterfaceMemberList 'end'*)?

InterfaceHeritage
	'('* QualifiedIdent ')'*
	@

DispInterfaceDesc
	'dispinterface'* (DispInterfaceHeritage InterfaceGUID InterfaceMemberList 'end'*)?

DispInterfaceHeritage
	@

InterfaceGUID	AsText
	'['* ConstExpression ']'*
	@

InterfaceMemberList
	(IntfMethodProp)*

ClassMethodProp	Simplify
	ClassMethodDecl
	PropertyDecl
	'class'* ClassClassMethodProp
	TypeSection
	ConstSection

ClassMethodDecl	SuccessiveTries
	IntfMethodRedirector
	MethodDecl

ClassClassMethodProp
	MethodDecl
	PropertyDecl
	VarSection

IntfMethodProp	Simplify
	MethodDecl
	PropertyDecl

IntfMethodRedirector
	IntfMethodRedirKind* Identifier '.'* Identifier '='* Identifier ';'*

IntfMethodRedirKind
	'procedure'
	'function'

MethodDecl
	MethodKind MethodNameDeclaration MethodSignature ';'* (MethodModifier ';'*)*

PropertyDecl
	PropertyKind IdentifierDecl PropertyNextDecl (PropInfo)* ';'* (PropertyModifier ';'*)*

PropertyKind	AsText
	'property'

PropertyNextDecl	Simplify
	PropertySignature
	RedefineMarker

RedefineMarker
	@

PropInfo	Simplify
	PropReadAccess
	PropWriteAccess
	PropIndex
	PropDefaultValue
	PropStorage
	IgnoredPropInfo

PropReadAccess
	'read'* QualifiedIdent

PropWriteAccess
	'write'* QualifiedIdent

PropIndex
	'index'* ConstExpression

PropDefaultValue
	'default'* ConstExpression
	'nodefault'*

PropStorage
	'stored'* Expression

IgnoredPropInfo
	'readonly'
	'writeonly'
	'dispid' ConstExpression

PropertyModifier	Simplify
	DefaultMarker
	IgnoredPropertyModifier

DefaultMarker
	'default'

IgnoredPropertyModifier
	'deprecated' (tkStringCst)?

EventDesc	AsText
	RoutineKind MethodSignature EventModifiers

EventModifiers	SuccessiveTries
	CallingConvention EventModifiers
	EventIsOfObject EventModifiers
	';'* CallingConvention EventModifiers
	@

EventIsOfObject	AsText
	'of' 'object'

RoutineDecl
	RoutineKind MethodNameDeclaration MethodSignature (RoutineModifier)* ';'* (RoutineModifier ';'*)*

RoutineKind	AsText
	'procedure'
	'function'

MethodKind	AsText
	'procedure'
	'function'
	'constructor'
	'destructor'

MethodNameDeclaration
	Identifier

RoutineModifier	Simplify
	CallingConvention
	OverloadMarker
	IgnoredRoutineModifier

MethodModifier	Simplify
	CallingConvention
	OverloadMarker
	StaticMarker
	MethodLinkKind
	AbstractMarker
	IgnoredMethodModifier

CallingConvention
	'register'
	'cdecl'
	'pascal'
	'stdcall'
	'safecall'
	'assembler'

MethodLinkKind
	'virtual'
	'dynamic'
	'message' ConstExpression
	'override'

AbstractMarker
	'abstract'

OverloadMarker
	'overload'

StaticMarker
	'static'

IgnoredRoutineModifier
	'deprecated' (tkStringCst)?
	'platform'
	'inline'

IgnoredMethodModifier
	'deprecated' (tkStringCst)?
	'platform'
	'inline'
	'reintroduce'
	'dispid' ConstExpression

MethodSignature
	('('* MethodParamList ')'*)? ReturnType

PropertySignature
	('['* ParamList ']'*)? PropType

MethodParamList	Simplify
	ParamList
	@

ParamList	Simplify
	Param (';'* Param)*

ReturnType
	':'* QualifiedIdent
	@

PropType
	':'* QualifiedIdent

Param
	ParamKind ParamNameList ParamTypeAndDefault

ParamKind
	'const'
	'var'
	'out'
	@

ParamNameList
	ParamName (','* ParamName)*

ParamName
	Identifier

ParamTypeAndDefault	Simplify
	':'* ComplexParamType (ParamDefault)?
	@

ComplexParamType	Simplify
	ParamIsArray ParamArrayType
	ParamType

ParamIsArray	AsText
	'array' 'of'

ParamArrayType	Simplify
	TypeName
	'const'*

ParamType	Simplify
	TypeName

ParamDefault	Simplify
	'='* InitializationExpression

MethodImpl
	MethodImplHeader ForwardOrMethodBody

MethodImplHeader
	MethodImplKind QualifiedIdent MethodSignature (RoutineModifier)* ';'* (RoutineModifier ';'*)*

MethodImplKind	AsText
	'procedure'
	'function'
	'class' ClassMethodImplKind
	'constructor'
	'destructor'

ClassMethodImplKind	Simplify
	'procedure'
	'function'

ForwardOrMethodBody	Simplify
	ForwardMarker
	MethodBody

MethodBody
	(InMethodSection)* BeginEndBlock ';'*

InMethodSection	Simplify
	TypeSection
	ConstSection
	LocalVarSection

ForwardMarker
	'forward' ';'*

UnitInitialization
	'initialization'* InstructionList

UnitFinalization
	'finalization'* InstructionList

LocalVarSection
	'var'* (LocalVar)+

LocalVar
	CommaIdentDeclList ':'* TypeDesc ';'*

InstructionList
	(Instruction ';'*)*

Instruction	Simplify
	NoInstruction
	BeginEndBlock
	IfThenElseInstruction
	CaseOfInstruction
	WhileInstruction
	RepeatInstruction
	ForInstruction
	TryInstruction
	RaiseInstruction
	ExpressionInstruction
	WithInstruction

NoInstruction
	@

BeginEndBlock
	'begin'* InstructionList 'end'*

IfThenElseInstruction
	'if'* Expression 'then'* Instruction ElseBranch

ElseBranch	Simplify
	1 'else'* Instruction
	NoInstruction

CaseOfInstruction
	'case'* Expression 'of'* (CaseOfClause)+ CaseOfElseClause 'end'*

CaseOfClause
	CaseOfSetValue ':'* Instruction ';'*

CaseOfElseClause
	'else'* InstructionList
	@

WhileInstruction
	'while'* Expression 'do'* Instruction

RepeatInstruction
	'repeat'* InstructionList 'until'* Expression

ForInstruction
	'for'* ForControlVar ':='* Expression ForToDownTo Expression 'do'* Instruction

ForControlVar
	Identifier

ForToDownTo	Simplify
	ForTo
	ForDownTo

ForTo
	'to'

ForDownTo
	'downto'

TryInstruction
	'try'* InstructionList NextTryInstruction 'end'*

NextTryInstruction	Simplify
	ExceptClause
	FinallyClause

ExceptClause
	'except'* NextExceptClause

NextExceptClause	Simplify
	InstructionList
	MultiOn

MultiOn
	(OnClause)+ MultiOnElseClause

OnClause
	'on'* ExceptionVarAndType 'do'* InstructionList

ExceptionVarAndType
	QualifiedIdent (':'* QualifiedIdent)?

MultiOnElseClause
	'else'* InstructionList
	@

FinallyClause
	'finally'* InstructionList

RaiseInstruction
	'raise'* (Expression)?

ExpressionInstruction
	ExecutableExpression

ExecutableExpression
	Expression (AssignmentOp Expression)?

AssignmentOp
	':='

WithInstruction
	'with'* Expression WithEx

WithEx	Simplify
	InnerWith
	'do'* Instruction

InnerWith
	','* Expression WithEx
